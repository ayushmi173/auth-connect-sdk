version: "3.4"

networks:
  auth-connect:
    driver: bridge

volumes:
  auth-connect-volume:

services:
  # web:
  #   container_name: compliant-web
  #   build:
  #     context: .
  #     dockerfile: packages/web/Dockerfile
  #     target: production
  #     args:
  #       WEB_PORT: ${WEB_PORT}
  #       BACKEND_URL: ${BACKEND_URL}
  #   image: compliant-web:latest
  #   env_file: ${COMPLIANT_ENV_PATH:-.env}
  #   depends_on:
  #     - postgres
  #   ports:
  #     - '2002:2002'
  #   networks:
  #     - auth-connect
  #   restart: unless-stopped

  # backend:
  #   container_name: compliant-backend
  #   build:
  #     context: .
  #     dockerfile: packages/backend/Dockerfile
  #     target: production
  #   image: compliant-backend:latest
  #   env_file: ${COMPLIANT_ENV_PATH:-.env}
  #   depends_on:
  #     - postgres
  #   ports:
  #     - '2001:2001'
  #   networks:
  #     - auth-connect
  #   restart: unless-stopped

  postgres:
    container_name: auth-connect-postgres
    image: "postgres:11.5"
    command: postgres -c max_connections=1000
    environment:
      POSTGRES_USER: ayush
      POSTGRES_PASSWORD: password
      POSTGRES_DB: authconnect
      PGDATA: /var/lib/postgresql/data/db
    ports:
      - "5432:5432"
    volumes:
      - auth-connect-volume:/var/lib/postgresql/data:delegated
    networks:
      - auth-connect
    restart: unless-stopped

  pgadmin:
    container_name: auth-pgadmin
    image: "dpage/pgadmin4"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER:-ayush@mishra.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-password}
    networks:
      - auth-connect
    ports:
      - "5000:80"
